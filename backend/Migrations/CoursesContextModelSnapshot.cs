// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(CoursesContext))]
    partial class CoursesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourseSemester", b =>
                {
                    b.Property<int>("CoursesId")
                        .HasColumnType("int");

                    b.Property<int>("SemestersId")
                        .HasColumnType("int");

                    b.HasKey("CoursesId", "SemestersId");

                    b.HasIndex("SemestersId");

                    b.ToTable("CourseSemester", (string)null);

                    b.HasData(
                        new
                        {
                            CoursesId = 1,
                            SemestersId = 1
                        },
                        new
                        {
                            CoursesId = 2,
                            SemestersId = 1
                        },
                        new
                        {
                            CoursesId = 1,
                            SemestersId = 2
                        },
                        new
                        {
                            CoursesId = 3,
                            SemestersId = 2
                        },
                        new
                        {
                            CoursesId = 4,
                            SemestersId = 3
                        },
                        new
                        {
                            CoursesId = 5,
                            SemestersId = 3
                        });
                });

            modelBuilder.Entity("Models.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxScore")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("Weighting")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Assignments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxScore = 0,
                            Name = "Assignment 1",
                            Score = 0,
                            Weighting = 0
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 1,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxScore = 0,
                            Name = "Assignment 2",
                            Score = 0,
                            Weighting = 0
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 2,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxScore = 0,
                            Name = "Assignment 3",
                            Score = 0,
                            Weighting = 0
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 3,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxScore = 0,
                            Name = "Assignment 4",
                            Score = 0,
                            Weighting = 0
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 4,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxScore = 0,
                            Name = "Assignment 5",
                            Score = 0,
                            Weighting = 0
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 5,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxScore = 0,
                            Name = "Assignment 6",
                            Score = 0,
                            Weighting = 0
                        });
                });

            modelBuilder.Entity("Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Course 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Course 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Course 3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Course 4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Course 5"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Course 6"
                        });
                });

            modelBuilder.Entity("Models.Semester", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Semesters", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sem 1 2021",
                            Year = 2021
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sem 2 2021",
                            Year = 2021
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sem 1 2022",
                            Year = 2022
                        });
                });

            modelBuilder.Entity("CourseSemester", b =>
                {
                    b.HasOne("Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Semester", null)
                        .WithMany()
                        .HasForeignKey("SemestersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.Assignment", b =>
                {
                    b.HasOne("Models.Course", "Course")
                        .WithMany("Assignments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Models.Course", b =>
                {
                    b.Navigation("Assignments");
                });
#pragma warning restore 612, 618
        }
    }
}
